{"ast":null,"code":"import _asyncToGenerator from \"/home/ubuntu/DoD_DashBoard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  components: {},\n  data: function data() {\n    //처음 데이터 세팅\n    return {\n      Uptime: \"\",\n      hyomin: \"\",\n      happy: \"\",\n      weather: \"불러오는 중...\",\n      job_announcement: [],\n      Bachelor: [],\n      non_discipline: [],\n      internship: [],\n      Entrepreneurship: [],\n      academic: [],\n      school: []\n    };\n  },\n  method: {},\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var happy_url, hyomin_url, getfood, _getfood, response, json, json1, _json, _json2;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _getfood = function _getfood3() {\n                _getfood = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(url) {\n                  var nowdate, responce, data, index, main_index, _data, _index;\n\n                  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          nowdate = dayjs().format(\"YYYY-MM-DD\");\n                          _context2.next = 3;\n                          return axios(url + nowdate);\n\n                        case 3:\n                          responce = _context2.sent;\n\n                          if (!(url.indexOf(\"hyomin\") != -1)) {\n                            _context2.next = 15;\n                            break;\n                          }\n\n                          data = responce.data[\"root\"][0].WEEKLYMENU[0];\n                          index = 0;\n\n                        case 7:\n                          if (!(index < 8)) {\n                            _context2.next = 13;\n                            break;\n                          }\n\n                          if (!(data[\"fo_date\" + index] == nowdate)) {\n                            _context2.next = 10;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\", {\n                            아침: data[\"fo_menu_mor\" + index],\n                            점심: data[\"fo_menu_lun\" + index],\n                            저녁: data[\"fo_menu_eve\" + index]\n                          });\n\n                        case 10:\n                          index++;\n                          _context2.next = 7;\n                          break;\n\n                        case 13:\n                          _context2.next = 28;\n                          break;\n\n                        case 15:\n                          main_index = 0;\n\n                        case 16:\n                          if (!(main_index < 2)) {\n                            _context2.next = 28;\n                            break;\n                          }\n\n                          _data = responce.data[\"root\"][0].WEEKLYMENU[main_index];\n                          _index = 4 * main_index;\n\n                        case 19:\n                          if (!(_index < 4 + 4 * main_index)) {\n                            _context2.next = 25;\n                            break;\n                          }\n\n                          if (!(_data[\"fo_date\" + _index] == nowdate)) {\n                            _context2.next = 22;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\", {\n                            아침: _data[\"fo_menu_mor\" + _index],\n                            점심: _data[\"fo_menu_lun\" + _index],\n                            점심특: _data[\"fo_sub_lun\" + _index],\n                            저녁: _data[\"fo_menu_eve\" + _index],\n                            저녁특: _data[\"fo_sub_eve\" + _index]\n                          });\n\n                        case 22:\n                          _index++;\n                          _context2.next = 19;\n                          break;\n\n                        case 25:\n                          main_index++;\n                          _context2.next = 16;\n                          break;\n\n                        case 28:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n                return _getfood.apply(this, arguments);\n              };\n\n              getfood = function _getfood2(_x) {\n                return _getfood.apply(this, arguments);\n              };\n\n              //변수를 적는 곳\n              happy_url = \"https://dorm.deu.ac.kr/deu/food/getWeeklyMenu.kmc?locgbn=DE&sch_date=\";\n              hyomin_url = \"https://dorm.deu.ac.kr/hyomin/food/getWeeklyMenu.kmc?locgbn=DE&sch_date=\"; //fun을 적는곳(반복을 위해서 fun을 섰다.)\n              //이 fun은 기숙사를 파싱해서 저장하는 함수이다.\n\n              //처음에 한번만 이벤트가 발생하는곳\n              _this.Uptime = dayjs();\n              _context3.next = 7;\n              return getfood(happy_url);\n\n            case 7:\n              _this.happy = _context3.sent;\n              _context3.next = 10;\n              return getfood(hyomin_url);\n\n            case 10:\n              _this.hyomin = _context3.sent;\n              _context3.next = 13;\n              return axios.get(\"https://api.github.com/repos/asw-dod/dap-macro/issues\");\n\n            case 13:\n              response = _context3.sent;\n\n              if (response.data[0].title.indexOf(\"DAP\") != -1) {\n                json = JSON.parse(response.data[0].body);\n                _this.Bachelor = json[\"학사공지\"].notice;\n                _this.job_announcement = json[\"취업공지\"].notice;\n                _this.non_discipline = json[\"비교과\"].notice;\n                _this.internship = json[\"인턴십\"].notice;\n                json1 = JSON.parse(response.data[1].body);\n                _this.Entrepreneurship = json1[\"창업교육센터\"];\n                _this.academic = json1[\"학과공지\"];\n                _this.school = json1[\"학교공지\"];\n              } else {\n                _json = JSON.parse(response.data[1].body);\n                _this.Bachelor = _json[\"학사공지\"].notice;\n                _this.job_announcement = _json[\"취업공지\"].notice;\n                _this.non_discipline = _json[\"비교과\"].notice;\n                _this.internship = _json[\"인턴십\"].notice;\n                _json2 = JSON.parse(response.data[0].body);\n                _this.Entrepreneurship = _json2[\"창업교육센터\"];\n                _this.academic = _json2[\"학과공지\"];\n                _this.school = _json2[\"학교공지\"];\n              } //몇시간 마다 반복하는 이벤트가 발생하는 곳\n              //5시간마다 새로고침을 한다.\n\n\n              setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var response, _json3, _json4, _json5, _json6;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _this.Uptime = dayjs();\n                        _context.next = 3;\n                        return getfood(happy_url);\n\n                      case 3:\n                        _this.happy = _context.sent;\n                        _context.next = 6;\n                        return getfood(hyomin_url);\n\n                      case 6:\n                        _this.hyomin = _context.sent;\n                        _context.next = 9;\n                        return axios.get(\"https://api.github.com/repos/asw-dod/dap-macro/issues\");\n\n                      case 9:\n                        response = _context.sent;\n\n                        if (response.data[0].title.indexOf(\"DAP\") != -1) {\n                          _json3 = JSON.parse(response.data[0].body);\n                          _this.Bachelor = _json3[\"학사공지\"].notice;\n                          _this.job_announcement = _json3[\"취업공지\"].notice;\n                          _this.non_discipline = _json3[\"비교과\"].notice;\n                          _this.internship = _json3[\"인턴십\"].notice;\n                          _json4 = JSON.parse(response.data[1].body);\n                          _this.Entrepreneurship = _json4[\"창업교육센터\"];\n                          _this.academic = _json4[\"학과공지\"];\n                          _this.school = _json4[\"학교공지\"];\n                        } else {\n                          _json5 = JSON.parse(response.data[1].body);\n                          _this.Bachelor = _json5[\"학사공지\"].notice;\n                          _this.job_announcement = _json5[\"취업공지\"].notice;\n                          _this.non_discipline = _json5[\"비교과\"].notice;\n                          _this.internship = _json5[\"인턴십\"].notice;\n                          _json6 = JSON.parse(response.data[0].body);\n                          _this.Entrepreneurship = _json6[\"창업교육센터\"];\n                          _this.academic = _json6[\"학과공지\"];\n                          _this.school = _json6[\"학교공지\"];\n                        }\n\n                      case 11:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })), 18000000);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","data","Uptime","hyomin","happy","weather","job_announcement","Bachelor","non_discipline","internship","Entrepreneurship","academic","school","method","mounted","getfood","nowdate","dayjs","axios","responce","url","index","아침","점심","저녁","main_index","점심특","저녁특","happy_url","hyomin_url","response","json","JSON","json1","setInterval"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <v-app class=\"mmain\">\n    <v-app-bar app white>\n      <v-toolbar-title>ASW D.o.D Dap Dashboard</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-toolbar-title>{{ this.weather}}</v-toolbar-title>\n    </v-app-bar>\n    <v-main>\n      <div class=\"ma-5\">\n        <v-row>\n          <v-col>\n            <h2>학사공지</h2>\n            <v-card class=\"card-size\">\n              <div v-for=\"(Bacn, index) in Bachelor\" :key=\"index\">\n                <v-card-title\n                  v-animate-css=\"'flipInX'\"\n                  class=\"font-weight-bold\"\n                >\n                  {{ Bacn.title }}</v-card-title\n                >\n                <v-card-subtitle v-animate-css=\"'flipInX'\" class=\"pb-0\">\n                  주최: {{ Bacn.department }} 작성일:{{ Bacn.date }}\n                </v-card-subtitle>\n              </div>\n            </v-card>\n          </v-col>\n          <v-col>\n            <h2>취업</h2>\n            <v-card class=\"card-size\">\n              <div v-for=\"(inter, interx) in internship\" :key=\"interx\">\n                <v-card-title\n                  v-animate-css=\"'flipInX'\"\n                  class=\"font-weight-bold\"\n                >\n                  {{ inter[0] + inter[1] }}</v-card-title\n                >\n              </div>\n            </v-card>\n          </v-col>\n          <v-col>\n            <h2>ASW공지</h2>\n            <v-card class=\"card-size\">\n              <div v-for=\"(Enter, Enterx) in Entrepreneurship\" :key=\"Enterx\">\n                <v-card-title\n                  v-animate-css=\"'flipInX'\"\n                  class=\"font-weight-bold\"\n                >\n                  {{ Enter.title }}</v-card-title\n                >\n                <v-card-subtitle v-animate-css=\"'flipInX'\" class=\"pb-0\">\n                  {{ Enter.date }}\n                </v-card-subtitle>\n              </div>\n            </v-card>\n          </v-col>\n          <v-col>\n            <h2>학과공지</h2>\n            <v-card class=\"card-size\">\n              <div v-for=\"(aca, acax) in academic\" :key=\"acax\">\n                <v-card-title\n                  v-animate-css=\"'flipInX'\"\n                  class=\"font-weight-bold\"\n                >\n                  {{ aca.title }}</v-card-title\n                >\n                <v-card-subtitle v-animate-css=\"'flipInX'\" class=\"pb-0\">\n                  {{ aca.date }}\n                </v-card-subtitle>\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <h2>비교과</h2>\n            <v-card class=\"card-size\">\n              <div v-for=\"(non, nonx) in non_discipline\" :key=\"nonx\">\n                <v-card-title\n                  v-animate-css=\"'flipInX'\"\n                  class=\"font-weight-bold\"\n                >\n                  {{ non.title }}</v-card-title\n                >\n                <v-card-subtitle v-animate-css=\"'flipInX'\" class=\"pb-0\">\n                  신청기간: {{ non.receptionTime }} 기간: {{ non.playTime }}\n                </v-card-subtitle>\n              </div>\n            </v-card>\n          </v-col>\n          <v-col>\n            <h2>취업공지</h2>\n            <v-card class=\"card-size\">\n              <div v-for=\"(job, jobx) in job_announcement\" :key=\"jobx\">\n                <v-card-title\n                  v-animate-css=\"'flipInX'\"\n                  class=\"font-weight-bold\"\n                >\n                  {{ job.title }}</v-card-title\n                >\n                <v-card-subtitle v-animate-css=\"'flipInX'\" class=\"pb-0\">\n                  {{ job.date }}\n                </v-card-subtitle>\n              </div>\n            </v-card>\n          </v-col>\n          <v-col>\n            <h2>학교공지</h2>\n            <v-card class=\"card-size\">\n              <div v-for=\"(sch, shcx) in school\" :key=\"shcx\">\n                <v-card-title\n                  v-animate-css=\"'flipInX'\"\n                  class=\"font-weight-bold\"\n                >\n                  {{ sch.title }}</v-card-title\n                >\n                <v-card-subtitle v-animate-css=\"'flipInX'\" class=\"pb-0\">\n                  {{ sch.date }}\n                </v-card-subtitle>\n              </div>\n            </v-card>\n          </v-col>\n          <v-col>\n            <h2>오늘 기숙사 식단공지</h2>\n            <v-carousel\n              cycle\n              height=\"400\"\n              :show-arrows=\"false\"\n              hide-delimiter-background\n              delimiter-icon=\"mdi-minus\"\n            >\n              <v-carousel-item>\n                <!-- <v-sheet height=\"100%\" color=\"blue lighten-5\"> -->\n                <h2>행복기숙사</h2>\n                <h2>아침</h2>\n                <p class=\"memu-size\">\n                  {{ this.happy[\"아침\"] }}\n                </p>\n                <h2>점심</h2>\n                <p class=\"memu-size\">\n                  [한식]{{ this.happy[\"점심\"] }}<br />[일품]{{\n                    this.happy[\"점심특\"]\n                  }}\n                </p>\n                <h2>저녁</h2>\n                <p class=\"memu-size\">\n                  [한식]{{ this.happy[\"저녁\"] }}<br />[일품]{{\n                    this.happy[\"저녁특\"]\n                  }}\n                </p>\n                <!-- </v-sheet> -->\n              </v-carousel-item>\n              <v-carousel-item>\n                <h2>효민기숙사</h2>\n                <v-col>\n                  <h2>아침</h2>\n                  <p class=\"memu-size\">\n                    {{ this.hyomin[\"아침\"] }}\n                  </p>\n                  <h2>점심</h2>\n                  <p class=\"memu-size\">\n                    {{ this.hyomin[\"점심\"] }}\n                  </p>\n                  <h2>저녁</h2>\n                  <p class=\"memu-size\">\n                    {{ this.hyomin[\"저녁\"] }}\n                  </p>\n                </v-col>\n              </v-carousel-item>\n            </v-carousel>\n          </v-col>\n        </v-row>\n      </div>\n    </v-main>\n    <v-footer app>\n      Made by INMD\n      <v-spacer></v-spacer>\n      Update: {{ this.Uptime }}\n    </v-footer>\n    n>\n  </v-app>\n</template>\n\n<script>\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  components: {},\n  data: function () {\n    //처음 데이터 세팅\n    return {\n      Uptime: \"\",\n      hyomin: \"\",\n      happy: \"\",\n      weather: \"불러오는 중...\",\n      job_announcement: [],\n      Bachelor: [],\n      non_discipline: [],\n      internship: [],\n      Entrepreneurship: [],\n      academic: [],\n      school: [],\n    };\n  },\n  method: {},\n  async mounted() {\n    //변수를 적는 곳\n    const happy_url =\n      \"https://dorm.deu.ac.kr/deu/food/getWeeklyMenu.kmc?locgbn=DE&sch_date=\";\n    const hyomin_url =\n      \"https://dorm.deu.ac.kr/hyomin/food/getWeeklyMenu.kmc?locgbn=DE&sch_date=\";\n\n    //fun을 적는곳(반복을 위해서 fun을 섰다.)\n    //이 fun은 기숙사를 파싱해서 저장하는 함수이다.\n    async function getfood(url) {\n      const nowdate = dayjs().format(\"YYYY-MM-DD\");\n      const responce = await axios(url + nowdate);\n      if (url.indexOf(\"hyomin\") != -1) {\n        const data = responce.data[\"root\"][0].WEEKLYMENU[0];\n        for (let index = 0; index < 8; index++) {\n          if (data[\"fo_date\" + index] == nowdate) {\n            return {\n              아침: data[\"fo_menu_mor\" + index],\n              점심: data[\"fo_menu_lun\" + index],\n              저녁: data[\"fo_menu_eve\" + index],\n            };\n          }\n        }\n      } else {\n        for (let main_index = 0; main_index < 2; main_index++) {\n          const data = responce.data[\"root\"][0].WEEKLYMENU[main_index];\n          for (\n            let index = 4 * main_index;\n            index < 4 + 4 * main_index;\n            index++\n          ) {\n            if (data[\"fo_date\" + index] == nowdate) {\n              return {\n                아침: data[\"fo_menu_mor\" + index],\n                점심: data[\"fo_menu_lun\" + index],\n                점심특: data[\"fo_sub_lun\" + index],\n                저녁: data[\"fo_menu_eve\" + index],\n                저녁특: data[\"fo_sub_eve\" + index],\n              };\n            }\n          }\n        }\n      }\n    }\n\n    //처음에 한번만 이벤트가 발생하는곳\n    this.Uptime = dayjs();\n    this.happy = await getfood(happy_url);\n    this.hyomin = await getfood(hyomin_url);\n\n    const response = await axios.get(\n      \"https://api.github.com/repos/asw-dod/dap-macro/issues\"\n    );\n    if (response.data[0].title.indexOf(\"DAP\") != -1) {\n      const json = JSON.parse(response.data[0].body);\n      this.Bachelor = json[\"학사공지\"].notice;\n      this.job_announcement = json[\"취업공지\"].notice;\n      this.non_discipline = json[\"비교과\"].notice;\n      this.internship = json[\"인턴십\"].notice;\n      const json1 = JSON.parse(response.data[1].body);\n      this.Entrepreneurship = json1[\"창업교육센터\"];\n      this.academic = json1[\"학과공지\"];\n      this.school = json1[\"학교공지\"];\n    } else {\n      const json = JSON.parse(response.data[1].body);\n      this.Bachelor = json[\"학사공지\"].notice;\n      this.job_announcement = json[\"취업공지\"].notice;\n      this.non_discipline = json[\"비교과\"].notice;\n      this.internship = json[\"인턴십\"].notice;\n      const json1 = JSON.parse(response.data[0].body);\n      this.Entrepreneurship = json1[\"창업교육센터\"];\n      this.academic = json1[\"학과공지\"];\n      this.school = json1[\"학교공지\"];\n    }\n\n    //몇시간 마다 반복하는 이벤트가 발생하는 곳\n    //5시간마다 새로고침을 한다.\n    setInterval(async () => {\n      this.Uptime = dayjs();\n      this.happy = await getfood(happy_url);\n      this.hyomin = await getfood(hyomin_url);\n\n      const response = await axios.get(\n        \"https://api.github.com/repos/asw-dod/dap-macro/issues\"\n      );\n\n      if (response.data[0].title.indexOf(\"DAP\") != -1) {\n        const json = JSON.parse(response.data[0].body);\n        this.Bachelor = json[\"학사공지\"].notice;\n        this.job_announcement = json[\"취업공지\"].notice;\n        this.non_discipline = json[\"비교과\"].notice;\n        this.internship = json[\"인턴십\"].notice;\n        const json1 = JSON.parse(response.data[1].body);\n        this.Entrepreneurship = json1[\"창업교육센터\"];\n        this.academic = json1[\"학과공지\"];\n        this.school = json1[\"학교공지\"];\n      } else {\n        const json = JSON.parse(response.data[1].body);\n        this.Bachelor = json[\"학사공지\"].notice;\n        this.job_announcement = json[\"취업공지\"].notice;\n        this.non_discipline = json[\"비교과\"].notice;\n        this.internship = json[\"인턴십\"].notice;\n        const json1 = JSON.parse(response.data[0].body);\n        this.Entrepreneurship = json1[\"창업교육센터\"];\n        this.academic = json1[\"학과공지\"];\n        this.school = json1[\"학교공지\"];\n      }\n    }, 18000000);\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}
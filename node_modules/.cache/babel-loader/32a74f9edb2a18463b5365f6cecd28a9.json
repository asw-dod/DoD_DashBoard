{"ast":null,"code":"import _asyncToGenerator from \"/home/ubuntu/DoD_DashBoard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nimport \"dayjs/locale/ko\";\nexport default {\n  name: \"foodviews\",\n  components: {},\n  data: function data() {\n    //처음 데이터 세팅\n    return {\n      input: {\n        hyomin: \"\",\n        happy: \"\",\n        inforamtion: [],\n        suduck: []\n      },\n      //그외 추가하는거\n      color: 0,\n      color1: 0,\n      color2: 0,\n      //계산기\n      num_signal: 0,\n      pricenum: \"\",\n      personnum: \"\",\n      result: 0\n    };\n  },\n  methods: {\n    openModal: function openModal() {\n      this.$modal.show(\"Calculator\");\n      this.num_signal = 0;\n      this.pricenum = \"\";\n      this.personnum = \"\";\n      this.result = 0;\n    },\n    price: function price() {\n      this.num_signal = 0;\n    },\n    person: function person() {\n      this.num_signal = 1;\n      console.log(this.num_signal);\n    },\n    numberB: function numberB(value) {\n      var string = value.toString();\n\n      if (this.num_signal == 0) {\n        this.pricenum += string;\n      } else {\n        this.personnum += string;\n      }\n\n      this.result = parseInt(this.pricenum) / parseInt(this.personnum);\n      this.result = parseInt(this.result);\n    },\n    zero2: function zero2() {\n      if (this.num_signal == 0) {\n        this.pricenum += \"00\";\n      } else {\n        this.personnum += \"00\";\n      }\n\n      this.result = parseInt(this.pricenum) / parseInt(this.personnum);\n      this.result = parseInt(this.result);\n    },\n    Reset_return: function Reset_return() {\n      this.pricenum = \"\";\n      this.personnum = \"\";\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var response, getfood, _getfood;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _getfood = function _getfood3() {\n                _getfood = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(typei, data) {\n                  var time, index, _index;\n\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          time = dayjs().format(\"YYYY-MM-DD\"); //행복기숙사용\n\n                          if (!(typei == \"happy\")) {\n                            _context.next = 17;\n                            break;\n                          }\n\n                          _context.prev = 2;\n                          index = 0;\n\n                        case 4:\n                          if (!(index < data[\"happy\"].length)) {\n                            _context.next = 10;\n                            break;\n                          }\n\n                          if (!(data[\"happy\"][index].Date == time)) {\n                            _context.next = 7;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", data[\"happy\"][index]);\n\n                        case 7:\n                          index++;\n                          _context.next = 4;\n                          break;\n\n                        case 10:\n                          _context.next = 15;\n                          break;\n\n                        case 12:\n                          _context.prev = 12;\n                          _context.t0 = _context[\"catch\"](2);\n                          return _context.abrupt(\"return\", {\n                            breakfast: \"없거나 Api서버 오류 발생\",\n                            lunch: \"없거나 Api서버 오류 발생\",\n                            lunch_s: \"없거나 Api서버 오류 발생\",\n                            dinner: \"없거나 Api서버 오류 발생\",\n                            dinner_s: \"없거나 Api서버 오류 발생\"\n                          });\n\n                        case 15:\n                          _context.next = 51;\n                          break;\n\n                        case 17:\n                          if (!(typei == \"hyomin\")) {\n                            _context.next = 33;\n                            break;\n                          }\n\n                          _context.prev = 18;\n                          _index = 0;\n\n                        case 20:\n                          if (!(_index < data[\"hyomin\"].length)) {\n                            _context.next = 26;\n                            break;\n                          }\n\n                          if (!(data[\"hyomin\"][_index].Date == time)) {\n                            _context.next = 23;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", data[\"hyomin\"][_index]);\n\n                        case 23:\n                          _index++;\n                          _context.next = 20;\n                          break;\n\n                        case 26:\n                          _context.next = 31;\n                          break;\n\n                        case 28:\n                          _context.prev = 28;\n                          _context.t1 = _context[\"catch\"](18);\n                          return _context.abrupt(\"return\", {\n                            breakfast: \"없거나 Api서버 오류 발생\",\n                            lunch: \"없거나 Api서버 오류 발생\",\n                            lunch_s: \"없거나 Api서버 오류 발생\",\n                            dinner: \"없거나 Api서버 오류 발생\",\n                            dinner_s: \"없거나 Api서버 오류 발생\"\n                          });\n\n                        case 31:\n                          _context.next = 51;\n                          break;\n\n                        case 33:\n                          if (!(typei == \"inforamtion\")) {\n                            _context.next = 43;\n                            break;\n                          }\n\n                          _context.prev = 34;\n                          return _context.abrupt(\"return\", {\n                            cor1: data[\"inforamtion\"][\"정보공학관 코너1\"][0][\"menuName\"],\n                            cor3: data[\"inforamtion\"][\"정보공학관 코너3\"][0][\"menuName\"]\n                          });\n\n                        case 38:\n                          _context.prev = 38;\n                          _context.t2 = _context[\"catch\"](34);\n                          return _context.abrupt(\"return\", {\n                            cor1: \"없습\",\n                            cor3: \"없습\"\n                          });\n\n                        case 41:\n                          _context.next = 51;\n                          break;\n\n                        case 43:\n                          if (!(typei == \"suduck\")) {\n                            _context.next = 51;\n                            break;\n                          }\n\n                          _context.prev = 44;\n                          return _context.abrupt(\"return\", {\n                            cor2: data[\"suduck\"][\"수덕전 코너2\"][0][\"menuName\"],\n                            cor3: data[\"suduck\"][\"수덕전 코너3\"][0][\"menuName\"]\n                          });\n\n                        case 48:\n                          _context.prev = 48;\n                          _context.t3 = _context[\"catch\"](44);\n                          return _context.abrupt(\"return\", {\n                            cor2: \"없습\",\n                            cor3: \"없습\"\n                          });\n\n                        case 51:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[2, 12], [18, 28], [34, 38], [44, 48]]);\n                }));\n                return _getfood.apply(this, arguments);\n              };\n\n              getfood = function _getfood2(_x, _x2) {\n                return _getfood.apply(this, arguments);\n              };\n\n              //변수를 적는 곳\n              response = \"\"; //fun을 적는곳(반복을 위해서 fun을 섰다.)\n              //이 fun은 기숙사를 파싱해서 저장하는 함수이다.\n\n              _context2.next = 5;\n              return axios(\"https://raw.githubusercontent.com/asw-dod/Deu_food_api/master/output/api.json\");\n\n            case 5:\n              response = _context2.sent;\n              _context2.next = 8;\n              return getfood(\"happy\", response.data);\n\n            case 8:\n              _this.input.happy = _context2.sent;\n              _context2.next = 11;\n              return getfood(\"hyomin\", response.data);\n\n            case 11:\n              _this.input.hyomin = _context2.sent;\n              _context2.next = 14;\n              return getfood(\"inforamtion\", response.data);\n\n            case 14:\n              _this.input.inforamtion = _context2.sent;\n              _context2.next = 17;\n              return getfood(\"suduck\", response.data);\n\n            case 17:\n              _this.input.suduck = _context2.sent;\n\n              if (_this.input.hyomin[\"breakfast\"].includes(\"특식\")) {\n                _this.color = 1;\n              }\n\n              if (_this.input.hyomin[\"lunch\"].includes(\"특식\")) {\n                _this.color1 = 1;\n              }\n\n              if (_this.input.hyomin[\"dinner\"].includes(\"특식\")) {\n                _this.color2 = 1;\n              }\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","data","input","hyomin","happy","inforamtion","suduck","color","color1","color2","num_signal","pricenum","personnum","result","methods","openModal","price","person","console","numberB","value","zero2","Reset_return","mounted","getfood","time","dayjs","typei","index","breakfast","lunch","lunch_s","dinner","dinner_s","cor1","cor3","cor2","response","axios"],"sourceRoot":"src/View","sources":["foodviews.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row>\n      <v-col>\n        <h2>\n          📌오늘 학식공지 <span v-on:click=\"openModal\">[N/1 계산하기]</span>\n        </h2>\n        <v-carousel\n          cycle\n          height=\"300\"\n          :show-arrows=\"false\"\n          hide-delimiter-background\n          delimiter-icon=\"mdi-minus\"\n          class=\"h_card\"\n          :style=\"{ 'background-color': '#F6F2D4' }\"\n        >\n          <v-carousel-item>\n            <v-col>\n              <h2>수덕전(공통: 김밥 라면)</h2>\n              <h2>수덕전 코너1</h2>\n              <p class=\"memu-size\">정식</p>\n              <h2>수덕전 코너2</h2>\n              <p class=\"memu-size\">{{ this.input.suduck[\"cor2\"] }}<br /></p>\n              <h2>수덕전 코너3</h2>\n              <p class=\"memu-size\">{{ this.input.suduck[\"cor3\"] }}<br /></p>\n            </v-col>\n          </v-carousel-item>\n          <v-carousel-item>\n            <v-col>\n              <h2>정보공학관(공통: 라면)</h2>\n              <h2>정보공학관 코너1</h2>\n              <p class=\"memu-size\">\n                {{ this.input.inforamtion[\"cor1\"] }}<br />\n              </p>\n              <h2>정보공학관 코너3</h2>\n              <p class=\"memu-size\">\n                {{ this.input.inforamtion[\"cor3\"] }}<br />\n              </p>\n            </v-col>\n          </v-carousel-item>\n        </v-carousel>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col class=\"s_card\">\n        <h2>📌오늘 기숙사 식단 공지</h2>\n        <v-carousel\n          cycle\n          height=\"38vh\"\n          :show-arrows=\"false\"\n          hide-delimiter-background\n          delimiter-icon=\"mdi-minus\"\n          class=\"h_card\"\n          :style=\"{ 'background-color': '#F6F2D4' }\"\n        >\n          <v-carousel-item>\n            <v-col>\n              <h2>행복기숙사</h2>\n              <h2>점심</h2>\n              <p class=\"memu-size\">\n                [한식] {{ this.input.happy[\"lunch\"] }}<br />[일품]{{\n                  this.input.happy[\"lunch_s\"]\n                }}\n              </p>\n              <h2>저녁</h2>\n              <p class=\"memu-size\">\n                [한식] {{ this.input.happy[\"dinner\"] }}<br />[일품]{{\n                  this.input.happy[\"dinner_s\"]\n                }}\n              </p>\n            </v-col>\n          </v-carousel-item>\n          <v-carousel-item>\n            <v-col>\n              <h2>효민기숙사</h2>\n              <h2>아침</h2>\n              <div v-if=\"this.color == 1\">\n                <p class=\"memu-size\" style=\"color: #e1b643\">\n                  {{ this.input.hyomin[\"breakfast\"] }}\n                </p>\n              </div>\n              <div v-else>\n                <p class=\"memu-size\">\n                  {{ this.input.hyomin[\"breakfast\"] }}\n                </p>\n              </div>\n\n              <h2>점심</h2>\n              <div v-if=\"this.color1 == 1\">\n                <p class=\"memu-size\" style=\"color: #e1b643\">\n                  {{ this.input.hyomin[\"lunch\"] }}\n                </p>\n              </div>\n              <div v-else>\n                <p class=\"memu-size\">\n                  {{ this.input.hyomin[\"lunch\"] }}\n                </p>\n              </div>\n\n              <h2>저녁</h2>\n              <div v-if=\"this.color2 == 1\">\n                <p class=\"memu-size\" style=\"color: #e1b643\">\n                  {{ this.input.hyomin[\"dinner\"] }}\n                </p>\n              </div>\n              <div v-else>\n                <p class=\"memu-size\">\n                  {{ this.input.hyomin[\"dinner\"] }}\n                </p>\n              </div>\n            </v-col>\n          </v-carousel-item>\n        </v-carousel>\n      </v-col>\n    </v-row>\n    <modal name=\"Calculator\" :width=\"500\" :height=\"440\">\n      <v-container>\n        <h2>1명 당 {{ this.result }}원 입니다.</h2>\n        <p>{{ this.pricenum }} / {{ this.personnum }}</p>\n        <v-row>\n          <v-col\n            ><v-text-field\n              v-on:click=\"price\"\n              v-model=\"pricenum\"\n              label=\"가격?\"\n            ></v-text-field\n          ></v-col>\n          <v-col\n            ><v-text-field\n              v-on:click=\"person\"\n              v-model=\"personnum\"\n              label=\"몇명?\"\n            ></v-text-field\n          ></v-col>\n        </v-row>\n        <v-row style=\"text-align: center\">\n          <v-col v-on:click=\"numberB(1)\">1</v-col>\n          <v-col v-on:click=\"numberB(2)\">2</v-col>\n          <v-col v-on:click=\"numberB(3)\">3</v-col>\n        </v-row>\n        <v-row style=\"text-align: center\">\n          <v-col v-on:click=\"numberB(4)\">4</v-col>\n          <v-col v-on:click=\"numberB(5)\">5</v-col>\n          <v-col v-on:click=\"numberB(6)\">6</v-col>\n        </v-row>\n        <v-row style=\"text-align: center\">\n          <v-col v-on:click=\"numberB(7)\">7</v-col>\n          <v-col v-on:click=\"numberB(8)\">8</v-col>\n          <v-col v-on:click=\"numberB(9)\">9</v-col>\n        </v-row>\n        <v-row style=\"text-align: center\">\n          <v-col v-on:click=\"numberB(0)\">0</v-col>\n          <v-col v-on:click=\"zero2\">00</v-col>\n          <v-col v-on:click=\"Reset_return\">Reset</v-col>\n        </v-row>\n        <br>\n        <p>*소수점으로는 변환이 안됨니다. <br> \n        *창를 닫을려면 창밖 아무곳이나 누루세요</p>\n      </v-container>\n    </modal>\n  </div>\n</template>\n<script>\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nimport \"dayjs/locale/ko\";\n\nexport default {\n  name: \"foodviews\",\n  components: {},\n  data: function () {\n    //처음 데이터 세팅\n    return {\n      input: {\n        hyomin: \"\",\n        happy: \"\",\n        inforamtion: [],\n        suduck: [],\n      },\n      //그외 추가하는거\n      color: 0,\n      color1: 0,\n      color2: 0,\n      //계산기\n      num_signal: 0,\n      pricenum: \"\",\n      personnum: \"\",\n      result: 0,\n    };\n  },\n  methods: {\n    openModal() {\n      this.$modal.show(\"Calculator\");\n      this.num_signal = 0;\n      this.pricenum = \"\";\n      this.personnum = \"\";\n      this.result = 0;\n    },\n    price() {\n      this.num_signal = 0;\n    },\n    person() {\n      this.num_signal = 1;\n      console.log(this.num_signal);\n    },\n    numberB(value) {\n      const string = value.toString()\n      if (this.num_signal == 0) {\n        this.pricenum += string;\n      } else {\n        this.personnum += string;\n      }\n      this.result = parseInt(this.pricenum) / parseInt(this.personnum);\n      this.result = parseInt(this.result);\n    },\n    zero2() {\n      if (this.num_signal == 0) {\n        this.pricenum += \"00\";\n      } else {\n        this.personnum += \"00\";\n      }\n      this.result = parseInt(this.pricenum) / parseInt(this.personnum);\n      this.result = parseInt(this.result);\n    },\n    Reset_return() {\n      this.pricenum = \"\";\n      this.personnum = \"\";\n    },\n  },\n  async mounted() {\n    //변수를 적는 곳\n    let response = \"\";\n\n    //fun을 적는곳(반복을 위해서 fun을 섰다.)\n    //이 fun은 기숙사를 파싱해서 저장하는 함수이다.\n    async function getfood(typei, data) {\n      const time = dayjs().format(\"YYYY-MM-DD\");\n      //행복기숙사용\n      if (typei == \"happy\") {\n        try {\n          for (let index = 0; index < data[\"happy\"].length; index++) {\n            if (data[\"happy\"][index].Date == time) {\n              return data[\"happy\"][index];\n            }\n          }\n        } catch (error) {\n          return {\n            breakfast: \"없거나 Api서버 오류 발생\",\n            lunch: \"없거나 Api서버 오류 발생\",\n            lunch_s: \"없거나 Api서버 오류 발생\",\n            dinner: \"없거나 Api서버 오류 발생\",\n            dinner_s: \"없거나 Api서버 오류 발생\",\n          };\n        }\n        //효민기숙사용\n      } else if (typei == \"hyomin\") {\n        try {\n          for (let index = 0; index < data[\"hyomin\"].length; index++) {\n            if (data[\"hyomin\"][index].Date == time) {\n              return data[\"hyomin\"][index];\n            }\n          }\n        } catch (error) {\n          return {\n            breakfast: \"없거나 Api서버 오류 발생\",\n            lunch: \"없거나 Api서버 오류 발생\",\n            lunch_s: \"없거나 Api서버 오류 발생\",\n            dinner: \"없거나 Api서버 오류 발생\",\n            dinner_s: \"없거나 Api서버 오류 발생\",\n          };\n        }\n      } else if (typei == \"inforamtion\") {\n        try {\n          return {\n            cor1: data[\"inforamtion\"][\"정보공학관 코너1\"][0][\"menuName\"],\n            cor3: data[\"inforamtion\"][\"정보공학관 코너3\"][0][\"menuName\"],\n          };\n        } catch (error) {\n          return {\n            cor1: \"없습\",\n            cor3: \"없습\",\n          };\n        }\n      } else if (typei == \"suduck\") {\n        try {\n          return {\n            cor2: data[\"suduck\"][\"수덕전 코너2\"][0][\"menuName\"],\n            cor3: data[\"suduck\"][\"수덕전 코너3\"][0][\"menuName\"],\n          };\n        } catch (error) {\n          return {\n            cor2: \"없습\",\n            cor3: \"없습\",\n          };\n        }\n      }\n    }\n\n    //처음에 한번만 이벤트가 발생하는곳\n    response = await axios(\n      \"https://raw.githubusercontent.com/asw-dod/Deu_food_api/master/output/api.json\"\n    );\n\n    this.input.happy = await getfood(\"happy\", response.data);\n    this.input.hyomin = await getfood(\"hyomin\", response.data);\n    this.input.inforamtion = await getfood(\"inforamtion\", response.data);\n    this.input.suduck = await getfood(\"suduck\", response.data);\n\n    if (this.input.hyomin[\"breakfast\"].includes(\"특식\")) {\n      this.color = 1;\n    }\n    if (this.input.hyomin[\"lunch\"].includes(\"특식\")) {\n      this.color1 = 1;\n    }\n    if (this.input.hyomin[\"dinner\"].includes(\"특식\")) {\n      this.color2 = 1;\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}